#!/usr/bin/env ruby
require File.expand_path '../lib/todolista', File.dirname(__FILE__)
FileUtils.mkdir_p("#{ENV['HOME']}/.misideas") 
Dir.chdir("#{ENV['HOME']}/.misideas") 

def pintar
	a = Task.last 
	a 		
	print "#{a.id}\t#{a.tipo}\t\t#{a.created_at.strftime("%d-%m-%y")}\t"
	if a.estado == true
		print "Completado".foreground(:green)
	else
		print "Incompleto".foreground(:red)
	end
	puts "\t#{a.titulo}"	
end

def pintar_ayuda_default
	puts "Opciones:"
	puts "iniciar\t\t#Para crear la base de datos"
	puts "Ruby\t\t#Crea una nueva task".foreground(:green)
	puts "Rails\t\t#Crea una nueva task en rails".foreground(:green)
	puts "listar\t\t#Lista todas las tasks".foreground(:green)
	puts "completado\t#Completar una task".foreground(:green)
	puts "ver\t\t#Inspecciona una task".foreground(:green)
end
ActiveRecord::Base.establish_connection(:adapter => "sqlite3", 
										:database => "database.db")	 

case ARGV[0]
when "iniciar"
	if File.exist?("database.db")
		puts "Tu programa ya esta instalado.".foreground(:red)
		puts "Escribi help para ver la ayuda.".foreground(:green)
	else
		a = File.new("database.db","w")
		puts "Creando Database".foreground(:green)
		Esquema.new
	end	
when "Ruby"
	a = Task.new
	a[:tipo] = "Ruby"
	puts "Escriva el Titulo:".foreground(:green)
	a[:titulo] = STDIN.gets.chomp
	puts "Escriva una pequenia descripcion".foreground(:green)
	a[:descripcion] = STDIN.gets.chomp
	a.save
	puts "ID\tTipo\t\tCreado\t\tEstado\t\tTitulo"
	pintar

when "Rails"
	a = Task.new
	a[:tipo] = "Ruby"
	puts "Escriva el Titulo:".foreground(:green)
	a[:titulo] = STDIN.gets.chomp
	puts "Escriva una pequenia descripcion".foreground(:green)
	a[:descripcion] = STDIN.gets.chomp
	a.save
	pintar
when "listar"
	a = Task.all
	puts "ID\tTipo\t\tCreado\t\tEstado\t\tTitulo"
	a.each do |v|		
		print "#{v.id}\t#{v.tipo}\t\t#{v.created_at.strftime("%d-%m-%y")}\t"
		if v.estado == true
			print "Completado".foreground(:green)
		else
			print "Incompleto".foreground(:red)
		end
		puts "\t#{v.titulo}"
	end
when "completado"
	puts "ID del task completado?".foreground(:green)
	v = Task.find(STDIN.gets)	
	v.update_attributes(estado: true)
	puts "ID\tTipo\t\tTitulo\t\tCreado\t\tTerminado\tEstado"
	print "#{v.id}\t#{v.tipo}\t\t#{v.titulo}\t\t#{v.created_at.strftime("%d-%m-%y")}\t#{v.updated_at.strftime("%d-%m-%y")}\t"
	puts "Completo".foreground(:green)
	puts v.estado
when "ver"
	puts "ID del task que quiere inspeccionar?"
	a = Task.find(STDIN.gets)
	puts "Tipo: #{a.tipo}"
	puts "Titulo: #{a.titulo}"
	puts "Descripcion: #{a.descripcion}"
	puts "Creado: #{a.created_at.strftime("%d-%m-%y")}"
	puts "Terminado: #{a.updated_at.strftime("%d-%m-%y")}" if a.estado == true
	print "Estado: "
	puts "Completo".foreground(:green) if a.estado == true
	puts "Incompleto".foreground(:red) if a.estado == false
when "help"
	pintar_ayuda_default
else
	pintar_ayuda_default
end


